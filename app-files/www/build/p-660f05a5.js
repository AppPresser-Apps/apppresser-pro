import{o as e}from"./p-78d67758.js";import{s as t}from"./p-f03d831c.js";import{P as s}from"./p-d1311ccb.js";class a{constructor(e){this.url=e.url}updateState(e="",s=[]){switch(e){case"activity":t.buddypress.activity=s;break;case"user_activity":t.buddypress.user_activity=s;break;case"activity_item":t.buddypress.activity_item=s;break;case"members":t.buddypress.members=s;break;case"groups":t.buddypress.groups=s}}async getMembers(t={}){const s=this.url,a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var n=new Request(`${s}/wp-json/buddypress/v1/members${e(t)}`,{method:"GET",headers:new Headers(a)});return(await fetch(n)).json()}async getGroupMembers(t,s={}){const a=this.url,n=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var i=new Request(`${a}/wp-json/buddypress/v1/${t}/members${e(s)}`,{method:"GET",headers:new Headers(n)});return(await fetch(i)).json()}async getMemberByUsername(t={}){const s=this.url,a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var n=new Request(`${s}appp/v1/member${e(t)}`,{method:"GET",headers:new Headers(a)});return(await fetch(n)).json()}async getxProfile(t={}){const s=this.url,a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var n=new Request(`${s}/wp-json/buddypress/v1/xprofile/groups${e(t)}`,{method:"GET",headers:new Headers(a)});return(await fetch(n)).json()}async getActivity(t={}){const s=this.url,a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var n=new Request(`${s}/wp-json/buddypress/v1/activity${e(t)}`,{method:"GET",headers:new Headers(a)});const i=await fetch(n);return await i.json()}async addActivity(t={}){const s=this.url,a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var n=new Request(`${s}/wp-json/buddypress/v1/activity${e(t)}`,{method:"POST",headers:new Headers(a)});return(await fetch(n)).json()}async deleteActivity(t,s={}){const a=this.url,n=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var i=new Request(`${a}/wp-json/buddypress/v1/activity/${t}${e(s)}`,{method:"DELETE",headers:new Headers(n)});return(await fetch(i)).json()}async flagContent(t={}){const s=this.url,a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var n=new Request(`${s}/wp-json/appp/v1/flag/${e(t)}`,{method:"POST",headers:new Headers(a)});return(await fetch(n)).json()}async favActivity(t,s={}){const a=this.url,n=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var i=new Request(`${a}/wp-json/buddypress/v1/activity/${t}/favorite${e(s)}`,{method:"POST",headers:new Headers(n)});return(await fetch(i)).json()}async getGroups(t={}){const s=this.url,a=await this.getAuthHeaders(),n=Object.assign(Object.assign({},a),{"Content-Type":"application/json"});a&&(t.populate_extras=!0);var i=new Request(`${s}/wp-json/buddypress/v1/groups${e(t)}`,{method:"GET",headers:new Headers(n)});return console.log(i),(await fetch(i)).json()}async moderateUser(t={}){const s=this.url;let a={headers:Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"}),method:"POST"};try{return(await fetch(`${s}/wp-json/buddypress/v1/moderate${e(t)}`,a)).json()}catch(e){window.console.log(e)}}async activateUser(t,s={}){const a=this.url;let n={headers:{"Content-Type":"application/json"},method:"PUT"};try{const i=await fetch(`${a}/wp-json/buddypress/v1/signup/activate/${t}/${e(s)}`,n);return window.console.log("activate",i),i.json()}catch(e){return window.console.log("activate",e),e.json()}}async resetPassword(t={}){const s=this.url;let a={headers:{"Content-Type":"application/json"},method:"PUT"};try{const n=await fetch(`${s}/wp-json/appp/v1/reset-password/${e(t)}`,a);return window.console.log("reset password",n),n.json()}catch(e){window.console.log("reset password",e)}}async getBlockUsers(t={}){const s=this.url;let a={headers:Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"}),method:"GET"};try{return(await fetch(`${s}/wp-json/buddypress/v1/blocked${e(t)}`,a)).json()}catch(e){window.console.log(e)}}async getToken(){const e=await s.get({key:"auth"});return!!e.value&&JSON.parse(e.value).token}async getUserId(){const e=(await s.get({key:"auth"})).value;return console.log("userData",e),JSON.parse(e).user_id}async getAuthHeaders(){const e=(await s.get({key:"auth"})).value,t=!!e&&await JSON.parse(e).token;return t?{Authorization:`Bearer ${t}`}:{}}async getFriendshipRequests(t={}){const s=this.url,a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var n=new Request(`${s}/wp-json/buddypress/v1/friends/${e(Object.assign({is_confirmed:0},t))}`,{method:"GET",headers:new Headers(a)});return(await fetch(n)).json()}async acceptFriendship(e){const t=this.url,s=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var a=new Request(`${t}/wp-json/buddypress/v1/friends/${e}`,{method:"PUT",headers:new Headers(s)});return(await fetch(a)).json()}async rejectFriendship(e){const t=this.url,s=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var a=new Request(`${t}/wp-json/buddypress/v1/friends/${e}`,{method:"DELETE",headers:new Headers(s)});return(await fetch(a)).json()}async getProfileFields(){const t=this.url,s=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"}),a={fetch_field_data:!0,user_id:await this.getUserId()};console.log("headers",s);const n=new Request(`${t}/wp-json/buddypress/v1/xprofile/fields${e(a)}`,{method:"GET",headers:new Headers(s)}),i=await fetch(n);return await i.json()}async deleteProfileData(e){const t=this.url,s=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"}),a=await this.getUserId(),n=new Request(`${t}/wp-json/buddypress/v1/xprofile/${e}/data/${a}`,{method:"DELETE",headers:new Headers(s)}),i=await fetch(n),r=await i.json();if(i.status>=400)throw r;return r}async saveProfileData(e,t){const s=this.url,a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"}),n=await this.getUserId(),i=new Request(`${s}/wp-json/buddypress/v1/xprofile/${e}/data/${n}`,{method:"POST",headers:new Headers(a),body:JSON.stringify({value:t,context:"edit"})}),r=await fetch(i),o=await r.json();if(r.status>=400)throw o;return o}async joinGroup(e){const t=this.url,s=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var a=new Request(`${t}/wp-json/buddypress/v1/groups/${e}/members`,{method:"POST",headers:new Headers(s)});const n=await fetch(a);if(n.status>=400)throw n.json();return n.json()}async leaveGroup(e){const t=this.url,s=await this.getUserId(),a=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var n=new Request(`${t}/wp-json/buddypress/v1/groups/${e}/members/${s}`,{method:"DELETE",headers:new Headers(a)});const i=await fetch(n);if(i.status>=400)throw i.json();return i.json()}async getAchievements(t={type:"badges"}){const s=this.url,a={"Content-Type":"application/json"};await this.getUserId()&&Object.assign(a,await this.getAuthHeaders());var n=new Request(`${s}/wp-json/buddypress/v1/achievements${e(t)}`,{headers:new Headers(a)});const i=await fetch(n);if(i.status>=400)throw i.json();return i.json()}async getUserAchievements(){const e=await this.getUserId();return this.getAchievements({user:e,type:"badges"})}async getLeaderBoard(){const e=this.url,t=Object.assign(Object.assign({},await this.getAuthHeaders()),{"Content-Type":"application/json"});var s=new Request(`${e}/wp-json/buddypress/v1/leaderboard`,{headers:new Headers(t)});const a=await fetch(s);if(a.status>=400)throw a.json();return a.json()}async uploadAttachmentActivity(t={}){const s=this.url,a=Object.assign({},await this.getAuthHeaders()),n=new FormData;n.append("context","edit"),n.append("action","bp_activity_attachment_upload"),"attachments"in t&&t.attachments.map((e=>{const t=Date.now(),s=new File([e],"image/png"===e.type?`${t}.png`:`${t}.jpg`,{type:e.type});n.append("files[]",s)})),delete t.attachments;var i=new Request(`${s}/wp-json/buddypress/v1/activity${e(t)}`,{method:"POST",headers:new Headers(a),body:n});return(await fetch(i)).json()}}export{a as B}